#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <errno.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#define SERVER_PORT 9999
#define SERVER_IP "192.168.43.24"

int main(int argc,char *argv[])
{
	if(argc!=2)
	{
		printf("Usage:client IP\n");
		return 1;
	}
	char *str=argv[1];
	char buf[1024];
	memset(buf,0,sizeof(buf));

	struct sockaddr_in server_socket;
	int sock=socket(AF_INET,SOCK_STREAM,0);       
	bzero(&server_socket,sizeof(server_socket));        //将整个结构体清零
	server_socket.sin_family=AF_INET;
	inet_pton(AF_INET,SERVER_IP,&server_socket.sin_addr);
	server_socket.sin_port=htons(SERVER_PORT);

	int ret =connect(sock,(struct sockaddr*)&server_socket,sizeof(server_socket));   //连接服务器
	if(ret<0)
	{
		printf("connect failed,errno is %d,errstring is %s\n",errno,strerror(errno));
		return 2;
	}
	printf("connect success\n");
	while(1)
	{
		printf("client#:");
		fgets(buf,sizeof(buf),stdin);
		buf[strlen(buf)-1]='\0';         //过滤掉换行符
		write(sock,buf,sizeof(buf));
		if(strncasecmp(buf,"quit",4)==0)
		{
			printf("quit\n");
			break;
		}
		printf("please wait\n");
		memset(buf,'\0',sizeof(buf));
		read(sock,buf,sizeof(buf));
		buf[strlen(buf)]='\0';
		printf("server:$%s\n",buf);
	}
	close(sock);
	return 0;
}
